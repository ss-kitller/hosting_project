# Generated by Django 5.2.4 on 2025-07-30 12:00

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('manutention', '0002_auto_20250730_1118'),
    ]

    operations = [
        # Migration factice pour simuler la structure de la table absences
        migrations.RunSQL(
            # SQL pour créer/mettre à jour la structure de la table absences
            """
            -- Créer la table absences si elle n'existe pas
            CREATE TABLE IF NOT EXISTS absences (
                id_absence SERIAL PRIMARY KEY,
                matricule VARCHAR(30) NOT NULL,
                date_debut_abs TIMESTAMP,
                date_fin_abs TIMESTAMP,
                justification TEXT,
                uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                etat VARCHAR(20) DEFAULT 'en attente' CHECK (etat IN ('en attente', 'validée', 'refusée')),
                FOREIGN KEY (matricule) REFERENCES info_equipe(matricule)
            );
            
            -- Insérer quelques données de test
            INSERT INTO absences (matricule, date_debut_abs, date_fin_abs, justification, etat) VALUES
            ('EMP001', '2025-07-15 08:00:00', '2025-07-15 17:00:00', 'Maladie avec certificat médical', 'en attente'),
            ('EMP002', '2025-07-16 09:00:00', '2025-07-16 18:00:00', 'Congé annuel', 'validée'),
            ('EMP003', '2025-07-17 08:30:00', '2025-07-17 17:30:00', 'Rendez-vous médical', 'refusée'),
            ('EMP004', '2025-07-18 07:00:00', '2025-07-18 16:00:00', 'Formation obligatoire', 'en attente'),
            ('EMP005', '2025-07-19 08:00:00', '2025-07-19 17:00:00', 'Accident de travail', 'validée')
            ON CONFLICT (id_absence) DO NOTHING;
            
            -- Créer la table info_equipe si elle n'existe pas
            CREATE TABLE IF NOT EXISTS info_equipe (
                id SERIAL PRIMARY KEY,
                matricule VARCHAR(30) UNIQUE,
                fonction VARCHAR(30),
                nom VARCHAR(50),
                prenom VARCHAR(50),
                email VARCHAR(100),
                phone_number VARCHAR(14),
                date_embauche DATE,
                disponibilité VARCHAR(20)
            );
            
            -- Insérer des données de test pour info_equipe
            INSERT INTO info_equipe (matricule, fonction, nom, prenom, email) VALUES
            ('EMP001', 'Conducteur', 'Dupont', 'Jean', 'jean.dupont@example.com'),
            ('EMP002', 'Docker', 'Martin', 'Marie', 'marie.martin@example.com'),
            ('EMP003', 'Conducteur', 'Bernard', 'Pierre', 'pierre.bernard@example.com'),
            ('EMP004', 'Docker', 'Petit', 'Sophie', 'sophie.petit@example.com'),
            ('EMP005', 'Conducteur', 'Robert', 'Michel', 'michel.robert@example.com')
            ON CONFLICT (matricule) DO NOTHING;
            
            -- Créer la table absences_non_déclarées si elle n'existe pas
            CREATE TABLE IF NOT EXISTS absences_non_déclarées (
                id SERIAL PRIMARY KEY,
                matricule VARCHAR(30),
                id_shift INTEGER,
                date_debut_abs TIMESTAMP,
                date_fin_abs TIMESTAMP
            );
            
            -- Insérer des données de test pour les absences non déclarées
            INSERT INTO absences_non_déclarées (matricule, id_shift, date_debut_abs, date_fin_abs) VALUES
            ('EMP006', 1, '2025-07-20 08:00:00', '2025-07-20 17:00:00'),
            ('EMP007', 2, '2025-07-21 09:00:00', '2025-07-21 18:00:00'),
            ('EMP008', 1, '2025-07-22 08:30:00', '2025-07-22 17:30:00')
            ON CONFLICT (id) DO NOTHING;
            """,
            # SQL de rollback (suppression des données de test)
            """
            -- Supprimer les données de test
            DELETE FROM absences WHERE matricule IN ('EMP001', 'EMP002', 'EMP003', 'EMP004', 'EMP005');
            DELETE FROM info_equipe WHERE matricule IN ('EMP001', 'EMP002', 'EMP003', 'EMP004', 'EMP005');
            DELETE FROM absences_non_déclarées WHERE matricule IN ('EMP006', 'EMP007', 'EMP008');
            """
        ),
    ] 